{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// @ is an alias to /src\n\nexport default {\n  name: 'Register',\n  data() {\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        loginName: '',\n        password: '',\n        checkPass: '',\n        name: ''\n      },\n      rules: {\n        loginName: [{\n          required: true,\n          message: \"请输入你的名称\",\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 9,\n          message: \"请输入长度为2~9个字符的名称\",\n          trigger: 'blur'\n        }],\n        password: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {},\n    toLogin() {\n      this.$router.push({\n        path: '/Login'\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["name","data","validatePass","rule","value","callback","Error","ruleForm","checkPass","$refs","validateField","validatePass2","password","loginName","rules","required","message","trigger","min","max","validator","methods","submitForm","formName","toLogin","$router","push","path","resetForm","resetFields"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\n<div id=\"poster\">\n<el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"0px\" label-position=\"left\" class=\"register-container\">\n\n <h3 class=\"register_title\">\n    系统注册\n    <el-button  @click=\"toLogin()\">去登录</el-button>\n    </h3>\n\n      <el-form-item label=\"\" prop=\"loginName\">\n    <el-input type=\"text\" autocomplete=\"off\" v-model=\"ruleForm.loginName\" \n    placeholder=\"请输入用户名\" prefix-icon=\"el-icon-user-solid\"></el-input>\n  </el-form-item>\n    <el-form-item label=\"\" prop=\"name\">\n    <el-input type=\"text\" autocomplete=\"off\" v-model=\"ruleForm.name\" placeholder=\"请输入网名\" prefix-icon=\"el-icon-user-solid\"></el-input>\n  </el-form-item>\n\n  <el-form-item label=\"\" prop=\"password\">\n    <el-input type=\"password\" v-model=\"ruleForm.password\" autocomplete=\"off\" \n    placeholder=\"请输入密码\" prefix-icon=\"el-icon-lock\"></el-input>\n  </el-form-item>\n  <el-form-item label=\"\" prop=\"checkPass\">\n    <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\" \n    placeholder=\"请输入确认密码\" prefix-icon=\"el-icon-lock\"></el-input>\n  </el-form-item>\n\n  <el-form-item>\n    <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">注册</el-button>\n    <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n  </el-form-item>\n</el-form>\n</div>\n</template>\n\n<script>\n// @ is an alias to /src\n\nexport default {\n  name: 'Register',\ndata() {\n\n      var validatePass = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请输入密码'));\n        } else {\n          if (this.ruleForm.checkPass !== '') {\n            this.$refs.ruleForm.validateField('checkPass');\n          }\n          callback();\n        }\n      };\n      var validatePass2 = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请再次输入密码'));\n        } else if (value !== this.ruleForm.password) {\n          callback(new Error('两次输入密码不一致!'));\n        } else {\n          callback();\n        }\n      };\n      return {\n        ruleForm: {\n        loginName:'',\n          password: '',\n          checkPass: '',\n          name: ''\n        },\n        rules: {\n            loginName: [\n            { required:true,message:\"请输入你的名称\", trigger: 'blur' },\n            { min:2,max:9,message:\"请输入长度为2~9个字符的名称\", trigger: 'blur' }\n          ],\n          password: [\n            { validator: validatePass, trigger: 'blur' }\n          ],\n          checkPass: [\n            { validator: validatePass2, trigger: 'blur' }\n          ],\n\n        }\n      };\n    },\n    methods: {\n      submitForm(formName) {\n        \n      },\n      toLogin(){\n      this.$router.push({path:'/Login'})\n      },\n      resetForm(formName) {\n        this.$refs[formName].resetFields();\n      }\n    }\n}\n</script>\n\n<style>\n#poster{\nbackground-position:center;\nheight:100%;\nwidth:100%;\nbackground-size:cover;\nposition:fixed;\n\nmargin:0px;\npadding:0px;\n}\n\n.register-container{\nborder-radius:15px;\nbackground-clip:padding-box;\nmargin:90px auto;\npadding:35px 35px 15px 35px;\nwidth:350px;\nbackground:#fff;\nborder:1px solid #eaeaea;\nbox-shadow:0 0 25px #cac6c6;\n}\n.register_title{\nmargin:0px auto 40px auto;\ntext-align:center;\ncolor:#505458;\n}\n</style>"],"mappings":";AAmCA;;AAEA;EACAA,IAAA;EACAC,KAAA;IAEA,IAAAC,YAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,SAAAC,QAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAL,QAAA;MACA;IACA;IACA,IAAAM,aAAA,GAAAA,CAAAR,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,QAAA,CAAAK,QAAA;QACAP,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAE,QAAA;QACAM,SAAA;QACAD,QAAA;QACAJ,SAAA;QACAR,IAAA;MACA;MACAc,KAAA;QACAD,SAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,QAAA,GACA;UAAAQ,SAAA,EAAAlB,YAAA;UAAAe,OAAA;QAAA,EACA;QACAT,SAAA,GACA;UAAAY,SAAA,EAAAT,aAAA;UAAAM,OAAA;QAAA;MAGA;IACA;EACA;EACAI,OAAA;IACAC,WAAAC,QAAA,GAEA;IACAC,QAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;IACAC,UAAAL,QAAA;MACA,KAAAd,KAAA,CAAAc,QAAA,EAAAM,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}